parameters:
    skip:
        # Skipped symfony.neon rules
        PhpCsFixer\Fixer\Phpdoc\PhpdocAlignFixer: # harder looking diffs
        PhpCsFixer\Fixer\Phpdoc\PhpdocSummaryFixer: # I don't want summary being forced upon me. Sometime there is no need for it, I just want to explain what are the options for.
        PhpCsFixer\Fixer\FunctionNotation\ReturnTypeDeclarationFixer: # -> TypeHintDeclarationSniff.MissingReturnTypeHint
        PhpCsFixer\Fixer\Phpdoc\PhpdocToCommentFixer: # screws up @psalm-suppress https://github.com/FriendsOfPHP/PHP-CS-Fixer/issues/3611
        PhpCsFixer\Fixer\Phpdoc\PhpdocNoEmptyReturnFixer: # -> TypeHintDeclarationSniff.UselessReturnAnnotation
        # See https://github.com/FriendsOfPHP/PHP-CS-Fixer/issues/3391 for reason why are these not deprecated
        PhpCsFixer\Fixer\Phpdoc\PhpdocNoAccessFixer: # -> GeneralPhpdocAnnotationRemoveFixer
        PhpCsFixer\Fixer\Phpdoc\PhpdocNoPackageFixer: # -> GeneralPhpdocAnnotationRemoveFixer
        # Skipped symfony-risky.neon rules
        PhpCsFixer\Fixer\Alias\EregToPregFixer: # -> Don't need to worry about this in PHP 7
        PhpCsFixer\Fixer\Alias\NoAliasFunctionsFixer: # -> ForbiddenFunctionsSniff
        SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff.MissingTraversableParameterTypeHintSpecification:
            - 'src/Form/Type/*Type.php' # no need to define mixed[] for $options all the time
        PhpCsFixer\Fixer\Operator\BinaryOperatorSpacesFixer: # in tests array alignment might be very useful in dataproviders
            - '*tests/*.php'

services:
    # code logic improvements / easy simplifications
    PhpCsFixer\Fixer\LanguageConstruct\CombineConsecutiveIssetsFixer:
    PhpCsFixer\Fixer\ControlStructure\NoSuperfluousElseifFixer:
    PhpCsFixer\Fixer\FunctionNotation\NoUnreachableDefaultArgumentValueFixer:
    PhpCsFixer\Fixer\PhpUnit\PhpUnitMockShortWillReturnFixer:
    PhpCsFixer\Fixer\PhpUnit\PhpUnitMockFixer:
    SlevomatCodingStandard\Sniffs\ControlStructures\RequireShortTernaryOperatorSniff:
    SlevomatCodingStandard\Sniffs\ControlStructures\EarlyExitSniff:
    SlevomatCodingStandard\Sniffs\ControlStructures\UselessIfConditionWithReturnSniff:
    SlevomatCodingStandard\Sniffs\ControlStructures\UselessTernaryOperatorSniff:
    PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\ForLoopShouldBeWhileLoopSniff:
    PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\ForLoopWithTestFunctionCallSniff:
    PHP_CodeSniffer\Standards\Generic\Sniffs\Strings\UnnecessaryStringConcatSniff:
        allowMultiline: true
    PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\SelfMemberReferenceSniff:
    PHP_CodeSniffer\Standards\Squiz\Sniffs\Operators\IncrementDecrementUsageSniff:
    SlevomatCodingStandard\Sniffs\Exceptions\ReferenceThrowableOnlySniff:
    SlevomatCodingStandard\Sniffs\ControlStructures\RequireNullCoalesceEqualOperator:
    SlevomatCodingStandard\Sniffs\ControlStructures\RequireNullCoalesceOperatorSniff:
    PhpCsFixer\Fixer\ControlStructure\YodaStyleFixer:
        equal: false
        identical: false
        less_and_greater: false
    Symplify\CodingStandard\Sniffs\CleanCode\CognitiveComplexitySniff:
        maxCognitiveComplexity: 10 # try to decrease it with time to default value 8

    # dead code detection
    PhpCsFixer\Fixer\ClassNotation\NoNullPropertyInitializationFixer:
    PhpCsFixer\Fixer\Comment\NoEmptyCommentFixer:
    PhpCsFixer\Fixer\Phpdoc\NoEmptyPhpdocFixer:
    PhpCsFixer\Fixer\PhpTag\NoClosingTagFixer:
    PhpCsFixer\Fixer\Semicolon\NoEmptyStatementFixer:
    SlevomatCodingStandard\Sniffs\Namespaces\UnusedUsesSniff:
        searchAnnotations: true
    SlevomatCodingStandard\Sniffs\Classes\ModernClassNameReferenceSniff:
    SlevomatCodingStandard\Sniffs\Classes\UnusedPrivateElementsSniff:
    SlevomatCodingStandard\Sniffs\Commenting\UselessInheritDocCommentSniff:
    SlevomatCodingStandard\Sniffs\Exceptions\DeadCatchSniff:
    SlevomatCodingStandard\Sniffs\Namespaces\UseFromSameNamespaceSniff:
    SlevomatCodingStandard\Sniffs\Functions\UnusedInheritedVariablePassedToClosureSniff:
    SlevomatCodingStandard\Sniffs\TypeHints\UselessConstantTypeHintSniff:
    SlevomatCodingStandard\Sniffs\Variables\UnusedVariableSniff:
    SlevomatCodingStandard\Sniffs\Variables\UselessVariable:
    Symplify\CodingStandard\Sniffs\Debug\DebugFunctionCallSniff:

    # inconsistency fixes
    PhpCsFixer\Fixer\Alias\NoMixedEchoPrintFixer:
        use: echo
    PhpCsFixer\Fixer\ArrayNotation\NoTrailingCommaInSinglelineArrayFixer:
    PhpCsFixer\Fixer\ArrayNotation\TrailingCommaInMultilineArrayFixer:
    PhpCsFixer\Fixer\ArrayNotation\NormalizeIndexBraceFixer:
    PhpCsFixer\Fixer\Basic\BracesFixer:
    PhpCsFixer\Fixer\CastNotation\NoShortBoolCastFixer:
    PhpCsFixer\Fixer\CastNotation\ShortScalarCastFixer:
    PhpCsFixer\Fixer\ClassNotation\SelfAccessorFixer:
    PhpCsFixer\Fixer\ClassNotation\ClassDefinitionFixer:
        singleLine: true
    PhpCsFixer\Fixer\ClassNotation\ClassAttributesSeparationFixer:
        elements:
            - method
    PhpCsFixer\Fixer\ClassNotation\ProtectedToPrivateFixer:
    PhpCsFixer\Fixer\ClassNotation\SingleClassElementPerStatementFixer:
    PhpCsFixer\Fixer\ControlStructure\IncludeFixer:
    PhpCsFixer\Fixer\ControlStructure\NoUnneededControlParenthesesFixer:
    PhpCsFixer\Fixer\ControlStructure\NoUnneededCurlyBracesFixer:
    PhpCsFixer\Fixer\ClassNotation\NoUnneededFinalMethodFixer:
    PhpCsFixer\Fixer\Semicolon\SemicolonAfterInstructionFixer:
    PhpCsFixer\Fixer\Operator\StandardizeIncrementFixer:
    PhpCsFixer\Fixer\Casing\ConstantCaseFixer:
    PhpCsFixer\Fixer\Casing\LowercaseKeywordsFixer:
    PhpCsFixer\Fixer\Casing\LowercaseStaticReferenceFixer:
    PhpCsFixer\Fixer\Casing\MagicConstantCasingFixer:
    PhpCsFixer\Fixer\Casing\MagicMethodCasingFixer:
    PhpCsFixer\Fixer\Casing\NativeFunctionCasingFixer:
    PhpCsFixer\Fixer\Casing\NativeFunctionTypeDeclarationCasingFixer:
    PhpCsFixer\Fixer\CastNotation\LowercaseCastFixer:
    PhpCsFixer\Fixer\CastNotation\ModernizeTypesCastingFixer:
    PhpCsFixer\Fixer\ClassNotation\SingleTraitInsertPerStatementFixer:
    PhpCsFixer\Fixer\ClassNotation\VisibilityRequiredFixer:
    PhpCsFixer\Fixer\FunctionNotation\FunctionDeclarationFixer:
        closure_function_spacing: none
    PhpCsFixer\Fixer\Import\NoLeadingImportSlashFixer:
    PhpCsFixer\Fixer\Import\NoUnusedImportsFixer:
    PhpCsFixer\Fixer\Import\OrderedImportsFixer:
    PhpCsFixer\Fixer\Import\SingleImportPerStatementFixer:
    PhpCsFixer\Fixer\LanguageConstruct\DeclareEqualNormalizeFixer:
    PhpCsFixer\Fixer\LanguageConstruct\DirConstantFixer:
    PhpCsFixer\Fixer\LanguageConstruct\ElseifFixer:
    PhpCsFixer\Fixer\Operator\NewWithBracesFixer:
    PhpCsFixer\Fixer\Operator\BinaryOperatorSpacesFixer:
    PhpCsFixer\Fixer\Operator\IncrementStyleFixer:
    PhpCsFixer\Fixer\Operator\StandardizeNotEqualsFixer:
    PhpCsFixer\Fixer\Operator\UnaryOperatorSpacesFixer:
    PhpCsFixer\Fixer\PhpUnit\PhpUnitFqcnAnnotationFixer:
    PhpCsFixer\Fixer\PhpUnit\PhpUnitNoExpectationAnnotationFixer:
    PhpCsFixer\Fixer\PhpUnit\PhpUnitTestCaseStaticMethodCallsFixer:
    PhpCsFixer\Fixer\Strict\DeclareStrictTypesFixer:
    PhpCsFixer\Fixer\Strict\StrictComparisonFixer:
    PhpCsFixer\Fixer\StringNotation\HeredocToNowdocFixer:
    PhpCsFixer\Fixer\StringNotation\SingleQuoteFixer:
    SlevomatCodingStandard\Sniffs\Functions\ArrowFunctionDeclarationSniff:
    SlevomatCodingStandard\Sniffs\TypeHints\LongTypeHintsSniff:
    SlevomatCodingStandard\Sniffs\Namespaces\UseDoesNotStartWithBackslashSniff:
    SlevomatCodingStandard\Sniffs\Namespaces\ReferenceUsedNamesOnlySniff:
        searchAnnotations: true
        allowFullyQualifiedNameForCollidingClasses: true # class Foo extends \Vendor\Foo
        allowFullyQualifiedGlobalClasses: true
        allowFullyQualifiedGlobalFunctions: true
        allowFullyQualifiedGlobalConstants: true
    SlevomatCodingStandard\Numbers\RequireNumericLiteralSeparatorSniff:
    SlevomatCodingStandard\PHP\RequireNowdocSniff:
    SlevomatCodingStandard\PHP\UselessParenthesesSniff:
    PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\ForbiddenFunctionsSniff:
        forbiddenFunctions:
            chop: rtrim
            close: closedir
            delete: unset
            doubleval: floatval
            fputs: fwrite
            imap_create: createmailbox
            imap_fetchtext: body
            imap_header: headerinfo
            imap_listmailbox: list
            imap_listsubscribed: lsub
            imap_rename: renamemailbox
            imap_scan: listscan
            imap_scanmailbox: listscan
            mt_rand: random_int
            ini_alter: set
            is_double: is_float
            is_integer: is_int
            is_null: '!== null'
            is_real: is_float
            is_writeable: is_writable
            join: implode
            key_exists: array_key_exists
            magic_quotes_runtime: set_magic_quotes_runtime
            pos: current
            rand: random_int
            show_source: file
            sizeof: count
            strchr: strstr
            create_function: ~
    PhpCsFixer\Fixer\ArrayNotation\ArraySyntaxFixer:
        syntax: short
    PhpCsFixer\Fixer\ListNotation\ListSyntaxFixer:
        syntax: short

    # whitespaces
    PhpCsFixer\Fixer\ArrayNotation\NoMultilineWhitespaceAroundDoubleArrowFixer:
    PhpCsFixer\Fixer\ArrayNotation\NoWhitespaceBeforeCommaInArrayFixer:
    PhpCsFixer\Fixer\ArrayNotation\TrimArraySpacesFixer:
    PhpCsFixer\Fixer\ArrayNotation\WhitespaceAfterCommaInArrayFixer:
    PhpCsFixer\Fixer\Whitespace\NoWhitespaceInBlankLineFixer:
    PhpCsFixer\Fixer\CastNotation\CastSpacesFixer:
        space: none
    PhpCsFixer\Fixer\ClassNotation\NoBlankLinesAfterClassOpeningFixer:
    PhpCsFixer\Fixer\ControlStructure\SwitchCaseSpaceFixer:
    PhpCsFixer\Fixer\FunctionNotation\FunctionTypehintSpaceFixer:
    PhpCsFixer\Fixer\FunctionNotation\MethodArgumentSpaceFixer:
    PhpCsFixer\Fixer\FunctionNotation\ReturnTypeDeclarationFixer:
    PhpCsFixer\Fixer\FunctionNotation\NoSpacesAfterFunctionNameFixer:
    PhpCsFixer\Fixer\Import\SingleLineAfterImportsFixer:
    PhpCsFixer\Fixer\NamespaceNotation\BlankLineAfterNamespaceFixer:
    PhpCsFixer\Fixer\NamespaceNotation\NoLeadingNamespaceWhitespaceFixer:
    PhpCsFixer\Fixer\NamespaceNotation\SingleBlankLineBeforeNamespaceFixer:
    PhpCsFixer\Fixer\Operator\ConcatSpaceFixer:
    PhpCsFixer\Fixer\Operator\ObjectOperatorWithoutWhitespaceFixer:
    PhpCsFixer\Fixer\Operator\TernaryOperatorSpacesFixer:
    PhpCsFixer\Fixer\PhpTag\BlankLineAfterOpeningTagFixer:
    PhpCsFixer\Fixer\Semicolon\NoSinglelineWhitespaceBeforeSemicolonsFixer:
    PhpCsFixer\Fixer\Semicolon\SpaceAfterSemicolonFixer:
    PhpCsFixer\Fixer\Whitespace\BlankLineBeforeStatementFixer:
    PhpCsFixer\Fixer\Whitespace\CompactNullableTypehintFixer:
    PhpCsFixer\Fixer\Whitespace\HeredocIndentationFixer:
    PhpCsFixer\Fixer\Whitespace\IndentationTypeFixer:
    PhpCsFixer\Fixer\Whitespace\NoSpacesAroundOffsetFixer:
    PhpCsFixer\Fixer\Whitespace\NoSpacesInsideParenthesisFixer:
    PhpCsFixer\Fixer\Whitespace\NoTrailingWhitespaceFixer:
    PhpCsFixer\Fixer\Whitespace\NoTrailingWhitespaceInCommentFixer:
    PhpCsFixer\Fixer\Whitespace\LineEndingFixer:
    PhpCsFixer\Fixer\Whitespace\SingleBlankLineAtEofFixer:
    PHP_CodeSniffer\Standards\PEAR\Sniffs\ControlStructures\MultiLineConditionSniff:
    PHP_CodeSniffer\Standards\PEAR\Sniffs\Formatting\MultiLineAssignmentSniff:
    SlevomatCodingStandard\Sniffs\Namespaces\MultipleUsesPerLineSniff:
    Symplify\CodingStandard\Fixer\Strict\BlankLineAfterStrictTypesFixer:
    Symplify\CodingStandard\Fixer\LineLength\LineLengthFixer:
    PhpCsFixer\Fixer\Semicolon\MultilineWhitespaceBeforeSemicolonsFixer:
        strategy: new_line_for_chained_calls
    PhpCsFixer\Fixer\Whitespace\ArrayIndentationFixer:
    PhpCsFixer\Fixer\Whitespace\NoExtraBlankLinesFixer:
        tokens:
            - break
            - case
            - continue
            - curly_brace_block
            - default
            - extra
            - parenthesis_brace_block
            - return
            - square_brace_block
            - switch
            - throw
            - use
            - use_trait

    # comments/annotations/phpdoc
    PhpCsFixer\Fixer\Comment\SingleLineCommentStyleFixer:
    PhpCsFixer\Fixer\Phpdoc\AlignMultilineCommentFixer:
    PhpCsFixer\Fixer\Phpdoc\GeneralPhpdocAnnotationRemoveFixer:
        annotations: [package, created, version, copyright, license, abstract]
    PhpCsFixer\Fixer\Phpdoc\NoBlankLinesAfterPhpdocFixer:
    PhpCsFixer\Fixer\Phpdoc\PhpdocAnnotationWithoutDotFixer:
    PhpCsFixer\Fixer\Phpdoc\PhpdocAddMissingParamAnnotationFixer:
    PhpCsFixer\Fixer\Phpdoc\PhpdocTrimConsecutiveBlankLineSeparationFixer:
    PhpCsFixer\Fixer\Phpdoc\PhpdocTypesOrderFixer:
    PhpCsFixer\Fixer\Phpdoc\PhpdocOrderFixer:
    PhpCsFixer\Fixer\Phpdoc\PhpdocSingleLineVarSpacingFixer:
    PhpCsFixer\Fixer\Phpdoc\PhpdocIndentFixer:
    PhpCsFixer\Fixer\Phpdoc\PhpdocInlineTagFixer:
    PhpCsFixer\Fixer\Phpdoc\PhpdocNoAliasTagFixer:
    PhpCsFixer\Fixer\Phpdoc\PhpdocNoUselessInheritdocFixer:
    PhpCsFixer\Fixer\Phpdoc\PhpdocReturnSelfReferenceFixer:
    PhpCsFixer\Fixer\Phpdoc\PhpdocScalarFixer:
    PhpCsFixer\Fixer\Phpdoc\PhpdocSeparationFixer:
    PhpCsFixer\Fixer\Phpdoc\PhpdocTrimFixer:
    PhpCsFixer\Fixer\Phpdoc\PhpdocTypesFixer:
    PhpCsFixer\Fixer\Phpdoc\PhpdocVarWithoutNameFixer:
    PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\EmptyCatchCommentSniff:
    Symplify\CodingStandard\Sniffs\Debug\CommentedOutCodeSniff:
    Symplify\CodingStandard\Sniffs\Classes\ConstantSpacingSniff:
    Symplify\CodingStandard\Sniffs\Classes\PropertySpacingSniff:
    SlevomatCodingStandard\Sniffs\TypeHints\ParameterTypeHintSniff: &typehint_config
        traversableTypeHints:
            - Doctrine\Common\Collections\Collection
    SlevomatCodingStandard\Sniffs\TypeHints\PropertyTypeHintSniff:
        <<: *typehint_config
        enableNativeTypeHint: false
    SlevomatCodingStandard\Sniffs\TypeHints\ReturnTypeHintSniff:
        <<: *typehint_config
    SlevomatCodingStandard\Sniffs\Commenting\UselessFunctionDocCommentSniff:
        <<: *typehint_config
    SlevomatCodingStandard\Sniffs\Commenting\ForbiddenCommentsSniff:
        forbiddenCommentPatterns:
            - '~^(?:(?!private|protected|static)\S+ )?(?:con|de)structor\.\z~i'
            - '~^Created by \S+\.\z~i'
            - '~^\S+ [gs]etter\.\z~i'
            - '~^(User|Date|Time|Class|Interface|Trait): .+$~'
            - '~^(Get|Set|Add|Remove) \w+(\.?)$~'

    # @DoctrineAnnotation
    PhpCsFixer\Fixer\DoctrineAnnotation\DoctrineAnnotationArrayAssignmentFixer:
    PhpCsFixer\Fixer\DoctrineAnnotation\DoctrineAnnotationBracesFixer:
    PhpCsFixer\Fixer\DoctrineAnnotation\DoctrineAnnotationIndentationFixer:
    PhpCsFixer\Fixer\DoctrineAnnotation\DoctrineAnnotationSpacesFixer:
